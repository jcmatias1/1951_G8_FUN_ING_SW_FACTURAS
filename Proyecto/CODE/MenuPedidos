/*
                UNIVERSIDAD-DE-LAS-FUERZAS-ARMADAS-ESPE
                    CARRERA:INGENIERIA EN SOFTWARE
Integrantes:ANDRADE URIEL, MATIAS JEAN, PLUA THOMAS     PERIODO:202451
ASIGNATURA:Fundamentos de Ingenieria de Software        NRC:1967
FECHA: 18/01/2025
Tema: Menu Pedidos 
*/
package Sprint1;

import java.util.HashMap;
import java.util.*;
import javax.swing.*;

public class MenuPedidos extends javax.swing.JFrame {

    //atributos globales y variables (Al final tambien se encuentran las variables)
    //creacion de un hashMap para organizar los platos
    private Map<String, Double> platos;
    private Map<JCheckBox, String> checkBoxMap;
    private Set<String> seleccionPlato;
    private ArrayList<Object> listaPedidos;
    private MenuPrincipal menuPrincipal;
    private static String OPCION_DEFECTO = "Seleccione una opcion"; // opcion por defecto del JComboBox

    //metodo para inicializar platos
    private void inicializarPlatos() {
        //PLATOS DISPONIBLES AGREGAR DE LA MISMA MANERA
        getPlatos().put("Pollo a la parrilla", 3.04); // pollo a la parrilla
        getPlatos().put("Spagueti de pollo", 3.04); // spagueti de pollo
        getPlatos().put("Seco de pollo", 3.04); // seco de pollo

    }

    //metodo para mapear los platos 
    private void inicializarCheckBox() {
        this.getCheckBoxMap().put(getPlatoUno(), "Pollo a la parrilla");
        this.getCheckBoxMap().put(getPlatoDos(), "Spagueti de pollo");
        this.getCheckBoxMap().put(getPlatoTres(), "Seco de pollo");
    }

    //metodo para inicializar los action Listener 
    private void inicializarListener() {
        // Agregar y llamar a los ItemListener a los JCheckBox
        getPlatoUno().addItemListener(evt -> actualizarTotales());
        //platoUno.addItemListener(evt -> actualizarSeleccion(platoUno));

        getPlatoDos().addItemListener(evt -> actualizarTotales());
        //platoDos.addItemListener(evt -> actualizarSeleccion(platoDos));

        getPlatoTres().addItemListener(evt -> actualizarTotales());
        //platoTres.addItemListener(evt -> actualizarSeleccion(platoTres));

    }

    /**
     * Creates new form MenuPedidos
     *
     * @param menuPrincipal
     */
    //metodo Constructor
    public MenuPedidos(MenuPrincipal menuPrincipal) {
        //titulo de la ventana
        this.setTitle("Ingreso de Pedidos");
        platos = new HashMap<>();
        checkBoxMap = new HashMap<>();
        seleccionPlato = new HashSet<>();
        listaPedidos = new ArrayList<>();
        this.menuPrincipal = menuPrincipal;
        //llamada de la ventana inicial
        initComponents();

        //llamamos a las instanciaciones 
        this.inicializarPlatos();
        this.inicializarCheckBox();
        this.inicializarListener();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tipoPago = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        totalSinIVA = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        IVAtotal = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        totalConIva = new javax.swing.JLabel();
        platoUno = new javax.swing.JCheckBox();
        platoDos = new javax.swing.JCheckBox();
        botonAgregar = new javax.swing.JButton();
        botonRegresar = new javax.swing.JButton();
        platoTres = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 43, 45)), "Ingreso Pedidos", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 3, 24))); // NOI18N

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Platillos ");

        jLabel2.setText("Metodo de pago");

        tipoPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una opcion", "Efectivo", "Tarjeta ", "Transferencia" }));
        tipoPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoPagoActionPerformed(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("14.00");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("10.00");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Precio");

        jLabel6.setText("Total");

        totalSinIVA.setText(" ");

        jLabel7.setText("IVA 15%");

        IVAtotal.setText(" ");

        jLabel8.setText("Total a pagar");

        totalConIva.setText(" ");

        platoUno.setText("Pollo a la parrilla");
        platoUno.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                platoUnoItemStateChanged(evt);
            }
        });
        platoUno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                platoUnoActionPerformed(evt);
            }
        });

        platoDos.setText("Spaguetti de pollo ");

        botonAgregar.setText("Agregar");
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarActionPerformed(evt);
            }
        });

        botonRegresar.setText("Regresar");
        botonRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegresarActionPerformed(evt);
            }
        });

        platoTres.setText("Seco de pollo");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("14.00");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(botonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(totalConIva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(platoUno, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                                    .addComponent(platoTres, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(platoDos, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
                                .addGap(81, 81, 81)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE))))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(IVAtotal, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                                .addComponent(totalSinIVA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tipoPago, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(330, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(platoUno)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(platoTres))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(platoDos, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 223, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tipoPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(totalSinIVA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(IVAtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(totalConIva))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAgregar)
                    .addComponent(botonRegresar)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void tipoPagoActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void platoUnoActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void platoUnoItemStateChanged(java.awt.event.ItemEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void botonRegresarActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
        this.setVisible(false);
        this.getMenuPrincipal().setVisible(true);
    }                                             

    private void botonAgregarActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // BOTON AGREGAR
        // LLAMADA A VALIDACION DE DATOS 
        if (!validarDatos()) {
            return; // Si la validación falla, no continúa
        }
        agregarPedido();
        // LLAMADA DEL METODO LIMPIEZA DE CAMPOS PARA REINICIAR LOS CAMPOS EN PANTALLA
        limpiarCampos();
    }                                            

    // Método para obtener los platillos seleccionados y crear un nuevo pedido
    public void agregarPedido() {
        Set<String> platillosSeleccionados = new HashSet<>();
        for (Map.Entry<JCheckBox, String> entry : getCheckBoxMap().entrySet()) {
            JCheckBox checkBox = entry.getKey();
            String nombrePlatillo = entry.getValue();
            if (checkBox.isSelected()) {
                platillosSeleccionados.add(nombrePlatillo);
            }
        }

        if (!platillosSeleccionados.isEmpty()) {
            String tipoPago = (String) this.getTipoPago().getSelectedItem();
            Pedido nuevoPedido = new Pedido(platillosSeleccionados, tipoPago);
            getListaPedidos().add(nuevoPedido);
            System.out.println("Nuevo pedido agregado: " + nuevoPedido);
        }
    }

    // Método para validar el ingreso de datos de pedidos
    public boolean validarDatos() {
        // Validación de que al menos un platillo ha sido seleccionado
        if (!this.platoUno.isSelected() && !this.platoDos.isSelected() && !this.platoTres.isSelected()) {
            mensaje("Por favor, debe seleccionar al menos un platillo.", "Advertencia");
            return false;
        }

        // Validación de tipo de pago
        String pagoTipo = (String) this.getTipoPago().getSelectedItem();
        System.out.println("Tipo de pago seleccionado: " + pagoTipo); // Depuración
        if (getOPCION_DEFECTO().equals(pagoTipo)) {
            mensaje("Por favor, seleccione un tipo de pago.", "Advertencia");
            return false;
        }

        // Mostrar mensaje de que todo es válido
        mensaje("Se han agregado con éxito los datos.", "Datos Agregados");

        // Mensaje de depuración
        System.out.println("Datos validados correctamente. Tipo de pago: " + pagoTipo);

        return true;
    }

// Método para mostrar mensajes de error o confirmación
    public void mensaje(String mensaje, String titulo) {
        JOptionPane.showMessageDialog(
                this,
                mensaje,
                titulo,
                JOptionPane.INFORMATION_MESSAGE
        );
    }

    public Set<String> getSelectedItems() {
        return getSeleccionPlato();
    }

    //metodo para mostrar datos 
    public String mostrarPedido() {
        return "----Reporte del Pedido----";
    }

    //metodo para calcular y actualizar los totales de los platos
    private void actualizarTotales() {
        //se crea una variable total para el total de los platos
        double total = 0.00;

        // Recorrer el HashMap que asocia JCheckBox con los nombres de los platillos
        for (Map.Entry<JCheckBox, String> entry : getCheckBoxMap().entrySet()) {
            JCheckBox checkBox = entry.getKey();       // El JCheckBox actual
            String nombrePlatillo = entry.getValue(); // El nombre del platillo asociado

            if (checkBox.isSelected()) { // Si el JCheckBox está seleccionado
                double precio = getPlatos().get(nombrePlatillo); // Obtener el precio del HashMap de platillos
                total += precio; // Sumar el precio al total
            }
        }

        // Calcular IVA (15%)
        double totalIVA = total * 0.15;
        double totalConIVA = total * 1.15;

        // Actualizar los JLabel
        this.getTotalSinIVA().setText(String.format("%.2f", total)); //total sin iva
        this.getIVAtotal().setText(String.format("%.2f", totalIVA)); //solamente el iva
        this.getTotalConIva().setText(String.format("%.2f", totalConIVA)); //total pago con iva 
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel IVAtotal;
    private javax.swing.JButton botonAgregar;
    private javax.swing.JButton botonRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JCheckBox platoDos;
    private javax.swing.JCheckBox platoTres;
    private javax.swing.JCheckBox platoUno;
    private javax.swing.JComboBox<String> tipoPago;
    private javax.swing.JLabel totalConIva;
    private javax.swing.JLabel totalSinIVA;
    // End of variables declaration                   

    //metodo para limpiar los campos
    private void limpiarCampos() {
        //LIMPIEZA DE LOS CHECK BOX
        getPlatoUno().setSelected(false);
        getPlatoDos().setSelected(false);
        getPlatoTres().setSelected(false);

        //LIMPIEZA DEL COMBO BOX
        this.getTipoPago().setSelectedIndex(0);

    }

    /**
     * @return the platos
     */
    public Map<String, Double> getPlatos() {
        return platos;
    }

    /**
     * @param platos the platos to set
     */
    public void setPlatos(Map<String, Double> platos) {
        this.platos = platos;
    }

    /**
     * @return the listaPedidos
     */
    public ArrayList<Object> getListaPedidos() {
        return listaPedidos;
    }

    /**
     * @param listaPedidos the listaPedidos to set
     */
    public void setListaPedidos(ArrayList<Object> listaPedidos) {
        this.listaPedidos = listaPedidos;
    }

    /**
     * @return the checkBoxMap
     */
    public Map<JCheckBox, String> getCheckBoxMap() {
        return checkBoxMap;
    }

    /**
     * @param checkBoxMap the checkBoxMap to set
     */
    public void setCheckBoxMap(Map<JCheckBox, String> checkBoxMap) {
        this.checkBoxMap = checkBoxMap;
    }

    /**
     * @return the seleccionPlato
     */
    public Set<String> getSeleccionPlato() {
        return seleccionPlato;
    }

    /**
     * @param seleccionPlato the seleccionPlato to set
     */
    public void setSeleccionPlato(Set<String> seleccionPlato) {
        this.seleccionPlato = seleccionPlato;
    }

    /**
     * @return the menuPrincipal
     */
    public MenuPrincipal getMenuPrincipal() {
        return menuPrincipal;
    }

    /**
     * @param menuPrincipal the menuPrincipal to set
     */
    public void setMenuPrincipal(MenuPrincipal menuPrincipal) {
        this.menuPrincipal = menuPrincipal;
    }

    /**
     * @return the OPCION_DEFECTO
     */
    public static String getOPCION_DEFECTO() {
        return OPCION_DEFECTO;
    }

    /**
     * @param aOPCION_DEFECTO the OPCION_DEFECTO to set
     */
    public static void setOPCION_DEFECTO(String aOPCION_DEFECTO) {
        OPCION_DEFECTO = aOPCION_DEFECTO;
    }

    /**
     * @return the IVAtotal
     */
    public javax.swing.JLabel getIVAtotal() {
        return IVAtotal;
    }

    /**
     * @param IVAtotal the IVAtotal to set
     */
    public void setIVAtotal(javax.swing.JLabel IVAtotal) {
        this.IVAtotal = IVAtotal;
    }

    /**
     * @return the botonAgregar
     */
    public javax.swing.JButton getBotonAgregar() {
        return botonAgregar;
    }

    /**
     * @param botonAgregar the botonAgregar to set
     */
    public void setBotonAgregar(javax.swing.JButton botonAgregar) {
        this.botonAgregar = botonAgregar;
    }

    /**
     * @return the botonRegresar
     */
    public javax.swing.JButton getBotonRegresar() {
        return botonRegresar;
    }

    /**
     * @param botonRegresar the botonRegresar to set
     */
    public void setBotonRegresar(javax.swing.JButton botonRegresar) {
        this.botonRegresar = botonRegresar;
    }

    /**
     * @return the jLabel1
     */
    public javax.swing.JLabel getjLabel1() {
        return jLabel1;
    }

    /**
     * @param jLabel1 the jLabel1 to set
     */
    public void setjLabel1(javax.swing.JLabel jLabel1) {
        this.jLabel1 = jLabel1;
    }

    /**
     * @return the jLabel2
     */
    public javax.swing.JLabel getjLabel2() {
        return jLabel2;
    }

    /**
     * @param jLabel2 the jLabel2 to set
     */
    public void setjLabel2(javax.swing.JLabel jLabel2) {
        this.jLabel2 = jLabel2;
    }

    /**
     * @return the jLabel3
     */
    public javax.swing.JLabel getjLabel3() {
        return jLabel3;
    }

    /**
     * @param jLabel3 the jLabel3 to set
     */
    public void setjLabel3(javax.swing.JLabel jLabel3) {
        this.jLabel3 = jLabel3;
    }

    /**
     * @return the jLabel4
     */
    public javax.swing.JLabel getjLabel4() {
        return jLabel4;
    }

    /**
     * @param jLabel4 the jLabel4 to set
     */
    public void setjLabel4(javax.swing.JLabel jLabel4) {
        this.jLabel4 = jLabel4;
    }

    /**
     * @return the jLabel5
     */
    public javax.swing.JLabel getjLabel5() {
        return jLabel5;
    }

    /**
     * @param jLabel5 the jLabel5 to set
     */
    public void setjLabel5(javax.swing.JLabel jLabel5) {
        this.jLabel5 = jLabel5;
    }

    /**
     * @return the jLabel6
     */
    public javax.swing.JLabel getjLabel6() {
        return jLabel6;
    }

    /**
     * @param jLabel6 the jLabel6 to set
     */
    public void setjLabel6(javax.swing.JLabel jLabel6) {
        this.jLabel6 = jLabel6;
    }

    /**
     * @return the jLabel7
     */
    public javax.swing.JLabel getjLabel7() {
        return jLabel7;
    }

    /**
     * @param jLabel7 the jLabel7 to set
     */
    public void setjLabel7(javax.swing.JLabel jLabel7) {
        this.jLabel7 = jLabel7;
    }

    /**
     * @return the jLabel8
     */
    public javax.swing.JLabel getjLabel8() {
        return jLabel8;
    }

    /**
     * @param jLabel8 the jLabel8 to set
     */
    public void setjLabel8(javax.swing.JLabel jLabel8) {
        this.jLabel8 = jLabel8;
    }

    /**
     * @return the jLabel9
     */
    public javax.swing.JLabel getjLabel9() {
        return jLabel9;
    }

    /**
     * @param jLabel9 the jLabel9 to set
     */
    public void setjLabel9(javax.swing.JLabel jLabel9) {
        this.jLabel9 = jLabel9;
    }

    /**
     * @return the jPanel1
     */
    public javax.swing.JPanel getjPanel1() {
        return jPanel1;
    }

    /**
     * @param jPanel1 the jPanel1 to set
     */
    public void setjPanel1(javax.swing.JPanel jPanel1) {
        this.jPanel1 = jPanel1;
    }

    /**
     * @return the platoDos
     */
    public javax.swing.JCheckBox getPlatoDos() {
        return platoDos;
    }

    /**
     * @param platoDos the platoDos to set
     */
    public void setPlatoDos(javax.swing.JCheckBox platoDos) {
        this.platoDos = platoDos;
    }

    /**
     * @return the platoTres
     */
    public javax.swing.JCheckBox getPlatoTres() {
        return platoTres;
    }

    /**
     * @param platoTres the platoTres to set
     */
    public void setPlatoTres(javax.swing.JCheckBox platoTres) {
        this.platoTres = platoTres;
    }

    /**
     * @return the platoUno
     */
    public javax.swing.JCheckBox getPlatoUno() {
        return platoUno;
    }

    /**
     * @param platoUno the platoUno to set
     */
    public void setPlatoUno(javax.swing.JCheckBox platoUno) {
        this.platoUno = platoUno;
    }

    /**
     * @return the tipoPago
     */
    public javax.swing.JComboBox<String> getTipoPago() {
        return tipoPago;
    }

    /**
     * @param tipoPago the tipoPago to set
     */
    public void setTipoPago(javax.swing.JComboBox<String> tipoPago) {
        this.tipoPago = tipoPago;
    }

    /**
     * @return the totalConIva
     */
    public javax.swing.JLabel getTotalConIva() {
        return totalConIva;
    }

    /**
     * @param totalConIva the totalConIva to set
     */
    public void setTotalConIva(javax.swing.JLabel totalConIva) {
        this.totalConIva = totalConIva;
    }

    /**
     * @return the totalSinIVA
     */
    public javax.swing.JLabel getTotalSinIVA() {
        return totalSinIVA;
    }

    /**
     * @param totalSinIVA the totalSinIVA to set
     */
    public void setTotalSinIVA(javax.swing.JLabel totalSinIVA) {
        this.totalSinIVA = totalSinIVA;
    }
}
