/*
                UNIVERSIDAD-DE-LAS-FUERZAS-ARMADAS-ESPE
                    CARRERA:INGENIERIA EN SOFTWARE
Integrantes:ANDRADE URIEL, MATIAS JEAN, PLUA THOMAS     PERIODO:202451
ASIGNATURA:Fundamentos de Ingenieria de Software        NRC:1967
FECHA: 18/01/2025
Tema: Ventana Reportes 
*/
package proyectoFundamento;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author andra
 */
public class MenuReporte extends javax.swing.JFrame {

    //atributos 
    private MenuPrincipal menuPrincipal;
    private MenuClientes menuClientes;
    private MenuPedidos menuPedidos;

    /**
     * Creates new form MenuReportes
     *
     * @param menuClientes
     * @param menuPedidos
     * @param menuPrincipal
     */
    public MenuReporte(MenuClientes menuClientes, MenuPedidos menuPedidos, MenuPrincipal menuPrincipal) {
        this.setTitle("Generador de Reportes");// titulo de la ventana 

        //inicializacion de las clases tipo objeto
        this.menuPrincipal = menuPrincipal;
        this.menuClientes = menuClientes;
        this.menuPedidos = menuPedidos;

        // llamada del metodo de la ventana 
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        botonGenerarReporte = new javax.swing.JButton();
        botonGuardarReporte = new javax.swing.JButton();
        botonRegresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 43, 45)), "Reportes", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 3, 24))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        botonGenerarReporte.setText("Generar Reporte");
        botonGenerarReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGenerarReporteActionPerformed(evt);
            }
        });

        botonGuardarReporte.setText("Guardar Reporte");
        botonGuardarReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarReporteActionPerformed(evt);
            }
        });

        botonRegresar.setText("Regresar");
        botonRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 663, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(botonGenerarReporte)
                .addGap(70, 70, 70)
                .addComponent(botonGuardarReporte)
                .addGap(70, 70, 70)
                .addComponent(botonRegresar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonGenerarReporte)
                    .addComponent(botonGuardarReporte)
                    .addComponent(botonRegresar))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void botonGenerarReporteActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        // Botón Generar reporte
        List<Cliente> clientes = getMenuClientes().getClientes();
        if (clientes.isEmpty()) {
            getjTextArea1().setText("No hay clientes registrados.".toUpperCase());
            return;
        }

        StringBuilder reporte = new StringBuilder("-------Reporte de Clientes y Pedidos-------\n\n".toUpperCase());
        int pedidoIndex = 0;

        for (Cliente cliente : clientes) {
            reporte.append("--- Cliente ---\n")
                    .append("- Nombre: ").append(cliente.getNombre().toUpperCase()).append("\n")
                    .append("- Apellido: ").append(cliente.getApellido().toUpperCase()).append("\n")
                    .append("- Dirección: ").append(cliente.getDireccion().toUpperCase()).append("\n")
                    .append("- Correo: ").append(cliente.getCorreo().toUpperCase()).append("\n")
                    .append("- Tipo: ").append(cliente.getTipoIdentificacion().toUpperCase()).append("\tIdentificación: ").append(cliente.getIdentificacion()).append("\n")
                    .append("- Teléfono: ").append(cliente.getTelefono().toUpperCase()).append("\n\n");

            if (pedidoIndex < getMenuPedidos().getListaPedidos().size()) {
                Pedido pedido = (Pedido) getMenuPedidos().getListaPedidos().get(pedidoIndex);
                reporte.append("---- Reporte del Pedido ----\n".toUpperCase());
                reporte.append("Tipo de pago: ".toUpperCase()).append(pedido.getTipoPago().toUpperCase()).append("\n");
                double total = 0.0;
                for (String nombrePlatillo : pedido.getPlatillos()) {
                    double precio = getMenuPedidos().getPlatos().get(nombrePlatillo);
                    reporte.append("- ").append(nombrePlatillo.toUpperCase()).append(": $").append(precio).append("\n");
                    total += precio;
                }
                double totalConIVA = Math.round(total * 1.15 * 100.0) / 100.0;
                reporte.append("----------------------------\n")
                        .append("Total a pagar: $".toUpperCase()).append(total).append("\n")
                        .append("Total con IVA: $".toUpperCase()).append(totalConIVA).append("\n\n")
                        .append("----------------------------\n");
                pedidoIndex++;
            } else {
                reporte.append("No hay pedidos para este cliente.\n\n".toUpperCase());
            }
        }

        getjTextArea1().setText(reporte.toString());

    }                                                   

    private void botonGuardarReporteActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        // TODO add your handling code here:
        //boton Guardar reporte
        guardarReporte();
    }                                                   

    //metodo para guardar reporte
    private void guardarReporte() {
        String reportContent = this.getjTextArea1().getText();

        if (reportContent.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay datos para guardar.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        JFileChooser fileChooser = new JFileChooser();
        int option = fileChooser.showSaveDialog(this);

        if (option == JFileChooser.APPROVE_OPTION) {
            try (BufferedWriter writer = new BufferedWriter(new FileWriter(fileChooser.getSelectedFile()))) {
                writer.write(reportContent);
                JOptionPane.showMessageDialog(this, "Reporte guardado con éxito.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Error al guardar el archivo.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void botonRegresarActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
        //Boton Regresar
        this.setVisible(false);
        this.getMenuPrincipal().setVisible(true);
    }                                             

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuReporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton botonGenerarReporte;
    private javax.swing.JButton botonGuardarReporte;
    private javax.swing.JButton botonRegresar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration                   

    /**
     * @return the menuPrincipal
     */
    public MenuPrincipal getMenuPrincipal() {
        return menuPrincipal;
    }

    /**
     * @param menuPrincipal the menuPrincipal to set
     */
    public void setMenuPrincipal(MenuPrincipal menuPrincipal) {
        this.menuPrincipal = menuPrincipal;
    }

    /**
     * @return the menuClientes
     */
    public MenuClientes getMenuClientes() {
        return menuClientes;
    }

    /**
     * @param menuClientes the menuClientes to set
     */
    public void setMenuClientes(MenuClientes menuClientes) {
        this.menuClientes = menuClientes;
    }

    /**
     * @return the menuPedidos
     */
    public MenuPedidos getMenuPedidos() {
        return menuPedidos;
    }

    /**
     * @param menuPedidos the menuPedidos to set
     */
    public void setMenuPedidos(MenuPedidos menuPedidos) {
        this.menuPedidos = menuPedidos;
    }

    /**
     * @return the botonGenerarReporte
     */
    public javax.swing.JButton getBotonGenerarReporte() {
        return botonGenerarReporte;
    }

    /**
     * @param botonGenerarReporte the botonGenerarReporte to set
     */
    public void setBotonGenerarReporte(javax.swing.JButton botonGenerarReporte) {
        this.botonGenerarReporte = botonGenerarReporte;
    }

    /**
     * @return the botonGuardarReporte
     */
    public javax.swing.JButton getBotonGuardarReporte() {
        return botonGuardarReporte;
    }

    /**
     * @param botonGuardarReporte the botonGuardarReporte to set
     */
    public void setBotonGuardarReporte(javax.swing.JButton botonGuardarReporte) {
        this.botonGuardarReporte = botonGuardarReporte;
    }

    /**
     * @return the botonRegresar
     */
    public javax.swing.JButton getBotonRegresar() {
        return botonRegresar;
    }

    /**
     * @param botonRegresar the botonRegresar to set
     */
    public void setBotonRegresar(javax.swing.JButton botonRegresar) {
        this.botonRegresar = botonRegresar;
    }

    /**
     * @return the jPanel1
     */
    public javax.swing.JPanel getjPanel1() {
        return jPanel1;
    }

    /**
     * @param jPanel1 the jPanel1 to set
     */
    public void setjPanel1(javax.swing.JPanel jPanel1) {
        this.jPanel1 = jPanel1;
    }

    /**
     * @return the jScrollPane1
     */
    public javax.swing.JScrollPane getjScrollPane1() {
        return jScrollPane1;
    }

    /**
     * @param jScrollPane1 the jScrollPane1 to set
     */
    public void setjScrollPane1(javax.swing.JScrollPane jScrollPane1) {
        this.jScrollPane1 = jScrollPane1;
    }

    /**
     * @return the jTextArea1
     */
    public javax.swing.JTextArea getjTextArea1() {
        return jTextArea1;
    }

    /**
     * @param jTextArea1 the jTextArea1 to set
     */
    public void setjTextArea1(javax.swing.JTextArea jTextArea1) {
        this.jTextArea1 = jTextArea1;
    }
}
